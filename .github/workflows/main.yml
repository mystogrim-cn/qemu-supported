name: Persistent Ubuntu VPS (5h30 Auto-Restart)

on:
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 335  # 5h30m + buffer

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
          lfs: true  # ‚úÖ Enable Git LFS for large VM files

      - name: Prepare vm_data folder
        run: |
          echo "üìÅ Preparing vm_data folder..."
          mkdir -p "$GITHUB_WORKSPACE/vm_data"
          cd "$GITHUB_WORKSPACE/vm_data"
          echo "‚úÖ vm_data folder ready."

      - name: Restore previous VM data (includes .qcow2/.raw/.iso/.qwoc)
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üîÅ Restoring VM data from vm-data branch..."
          cd "$GITHUB_WORKSPACE/vm_data"
          rm -rf ./*
          git clone --branch vm-data https://$PAT_TOKEN@github.com/${{ github.repository }} . \
            || echo "‚ö†Ô∏è vm-data branch not found ‚Äî starting fresh."
          echo "‚úÖ Data restored (includes all VM disks and ISOs)."
          ls -lh || true

      - name: Start SSHX (for remote access)
        run: |
          echo "‚öôÔ∏è Starting SSHX..."
          cd "$GITHUB_WORKSPACE/vm_data"
          nohup bash -c "curl -sSf https://sshx.io/get | sh -s run > sshx_link.txt 2>&1" &
          sleep 8
          echo "üåê SSHX Link:"
          grep -Eo 'https://sshx.io/[^ ]+' sshx_link.txt || echo "‚ùå SSHX link not found"
          echo "‚úÖ SSHX running."

      - name: Start Heartbeat & Autosave (with Recursive Git LFS)
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üíæ Starting autosave (10s interval, recursive file scan)..."
          cd "$GITHUB_WORKSPACE/vm_data"

          # üß© Install and configure Git LFS
          sudo apt-get update -qq
          sudo apt-get install -y git-lfs
          git lfs install --skip-repo

          # üîç Track VM binary formats globally
          git lfs track "*.qcow2" "*.raw" "*.iso" "*.img" "*.vmdk" "*.qwoc"
          cat <<EOF > .gitattributes
*.qcow2 filter=lfs diff=lfs merge=lfs -text
*.raw   filter=lfs diff=lfs merge=lfs -text
*.iso   filter=lfs diff=lfs merge=lfs -text
*.img   filter=lfs diff=lfs merge=lfs -text
*.vmdk  filter=lfs diff=lfs merge=lfs -text
*.qwoc  filter=lfs diff=lfs merge=lfs -text
EOF

          # üåÄ Start infinite autosave loop
          nohup bash -c "while true; do
            echo \"üîç Scanning for VM image files...\"
            find . -type f \( -iname '*.qcow2' -o -iname '*.raw' -o -iname '*.iso' -o -iname '*.img' -o -iname '*.vmdk' -o -iname '*.qwoc' \) -print || true

            git init -q
            git config user.email 'actions@github.com'
            git config user.name 'github-actions'
            git add .gitattributes
            git add --all
            git commit -m \"üïê Autosave at \$(date '+%H:%M:%S')\" -q || true
            git branch -M vm-data
            git push -f https://$PAT_TOKEN@github.com/${{ github.repository }} vm-data >/dev/null 2>&1 || true

            echo \"[\$(date '+%H:%M:%S')] ‚úÖ Autosave complete.\" >> status.log
            sleep 10
          done" &

          echo "‚úÖ Autosave running (includes all VM images recursively)."

      - name: Keep VPS alive
        run: |
          echo "‚è≥ VPS running for 5 hours 30 minutes..."
          sleep 19800

      - name: Final Save + Auto Restart (recursive LFS backup)
        if: always()
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          WORKFLOW_FILE: main.yml
          RESTART_REF: main
        run: |
          echo "üì¶ Saving final data before restart..."
          cd "$GITHUB_WORKSPACE/vm_data"

          sudo apt-get update -qq
          sudo apt-get install -y git-lfs
          git lfs install --skip-repo

          # Re-track file types to ensure consistency
          git lfs track "*.qcow2" "*.raw" "*.iso" "*.img" "*.vmdk" "*.qwoc"
          cat <<EOF > .gitattributes
*.qcow2 filter=lfs diff=lfs merge=lfs -text
*.raw   filter=lfs diff=lfs merge=lfs -text
*.iso   filter=lfs diff=lfs merge=lfs -text
*.img   filter=lfs diff=lfs merge=lfs -text
*.vmdk  filter=lfs diff=lfs merge=lfs -text
*.qwoc  filter=lfs diff=lfs merge=lfs -text
EOF

          echo "üîç Checking vm_data recursively for image files..."
          find . -type f \( -iname '*.qcow2' -o -iname '*.raw' -o -iname '*.iso' -o -iname '*.img' -o -iname '*.vmdk' -o -iname '*.qwoc' \) -print || true

          git init -q
          git config user.email 'actions@github.com'
          git config user.name 'github-actions'
          git add .gitattributes
          git add --all
          git commit -m \"üíæ Final autosave before restart \$(date '+%H:%M:%S')\" -q || true
          git branch -M vm-data
          git push -f https://$PAT_TOKEN@github.com/${{ github.repository }} vm-data || true
          echo "‚úÖ Final data saved (includes all VM images)."

          echo "[$(date '+%H:%M:%S')] üîÅ Restart triggered" >> status.log

          echo "‚ôªÔ∏è Triggering automatic restart..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$WORKFLOW_FILE/dispatches" \
            -d "{\"ref\":\"$RESTART_REF\"}"
          echo "‚úÖ Restart request sent!"
